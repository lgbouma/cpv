"""
Tools when interpolating against isochrones.

| get_Feiden2016
"""
import os
from os.path import join
from glob import glob
from complexrotators.paths import DATADIR
import pandas as pd, numpy as np
from astropy import units as u, constants as c

def get_Feiden2016(subtype='mag'):
    """
    Get the Feiden+2016 magnetic models, which span ~1 to 50 Myr.
    """
    isodir = join(DATADIR, 'models', 'Feiden_2016_iso', subtype)
    isopaths = glob(join(isodir, 'dmestar*.iso'))

    ages_myr = [
        os.path.basename(i).split("_")[1].replace('myr','').lstrip('0')
        for i in isopaths
    ]

    dfs = []
    for age_myr, isopath in zip(ages_myr, isopaths):
        _df = pd.read_csv(
            isopath, comment='#',
            names='mass logTeff logg logL logR A(Li) Mconv,env'.split(" "),
            delim_whitespace=True
        )
        _df['age'] = age_myr
        dfs.append(_df)
    df = pd.concat(dfs)

    return df


def get_PARSEC():
    """
    1 to 200 myr, linearly spaced by 1 myr; all available masses.  solar metallicity.

    # File generated by CMD 3.7 (http://stev.oapd.inaf.it/cmd) on Sat Jun 24 05:06:03 CEST 2023
    # isochrones based on PARSEC release v1.2S +  COLIBRI S_37 + S_35 + PR16
    # Basic references:
    # Bressan et al. (2012), MNRAS, 427, 127 +
    # Chen et al. (2014, 2015), MNRAS, 444, 2525 + MNRAS, 452, 1068 +
    # Tang et al. (2014), MNRAS, 445, 4287 +
    # Marigo et al. (2017), ApJ, 835, 77 +
    # Pastorelli al. (2019), MNRAS, 485, 5666 +
    # Pastorelli al. (2020), MNRAS, in press
    # Thermal pulse cycles included
    # On RGB, assumed Reimers mass loss with efficiency eta=0.2
    # LPV periods and growth rates added cf. Trabucchi et al. (2019)
    # but fundamental-mode LPV periods are from Trabucchi et al. (2021)
    # Photometric system: <i>UBVRIJHK</i> (cf. Maiz-Apellaniz 2006 + Bessell 1990)
    # Using YBC version of bolometric corrections as in Chen et al. (2019)
    # O-rich circumstellar dpmod60alox40 dust from Groenewegen (2006)
    # C-rich circumstellar AMCSIC15 dust from Groenewegen (2006)
    # IMF: Kroupa (2001, 2002) + Kroupa et al. (2013) canonical
    # two-part-power law IMF corrected for unresolved binaries
    """

    isopath = join(DATADIR, 'models', 'PARSEC_v1.2', "output101431780335.dat")

    df = pd.read_csv(isopath, delim_whitespace=True, comment='#')

    L = 10**(np.array(df.logL)) * u.Lsun
    Teff = 10**(np.array(df.logTe)) * u.K
    # σT^4 = L / (4πR^2)
    # R^2 = L / (4 * π * σT^4 )
    Rstar = np.sqrt(
        L / (4 * np.pi * c.sigma_sb * Teff**4)
    ).to(u.Rsun)

    df['Teff'] = np.array(Teff.value)
    df['Rstar'] = np.array(Rstar.value)
    df['logRstar'] = np.log10(np.array(Rstar.value))

    return df
